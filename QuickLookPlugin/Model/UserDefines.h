#ifndef __USER_DEFINES_H__#define __USER_DEFINES_H__/* NB. int will be always 32 bits whether arch is i386 or x86_64. */typedef struct{	unsigned char second;	unsigned char minute;	unsigned char hour;	unsigned char year;	unsigned char day;	unsigned char month;	unsigned char filler;	unsigned char weekDay;} GSDateTimeRec;// It's not advisable to read into this structtypedef struct{	u_int16_t thread_class;		// +00	u_int16_t thread_format;	// +02	u_int16_t thread_kind;		// +04	u_int16_t thread_crc;		// +06	u_int32_t thread_eof;		// +08	u_int32_t comp_thread_eof;	// +12} ShrinkItThreadRecord;typedef struct{	u_int32_t startMark;	u_int32_t uncompressedSize;	u_int32_t compressedSize;	u_int16_t compressedDataFormat;	u_int16_t crc;} CompressedDataDescriptor;typedef NS_OPTIONS(unsigned int, ShrinkItFileKind) {	kIsPlainShk			= 0x0,	kIsShkWithBny		= 0x1,	kIsPlainSea			= 0x2,	kIsSeaWithBny		= 0x3};typedef NS_OPTIONS(unsigned int, ShrinkItThreadFormat) {	kShrinkItThreadFormatIsUncompressed			= 0x0,	kShrinkItThreadFormatIsHuffman				= 0x1,	kShrinkItThreadFormatIsLZW1					= 0x2,	kShrinkItThreadFormatIsLZW2					= 0x3,	kShrinkItThreadFormatIs12BitLZW				= 0x4,	kShrinkItThreadFormatIs16BitLZW				= 0x5};#define kShrinkItThreadClassIsMessage			0x0#define kShrinkItThreadClassIsControl			0x1#define kShrinkItThreadClassIsData				0x2#define kShrinkItThreadClassIsFilename			0x3#define kShrinkItThreadKindIsText				0x0	// when thread_class == 0x0 (message)#define kShrinkItThreadKindIsCommentText		0x1	// when thread_class == 0x0#define kShrinkItThreadKindIsIcon				0x2	// when thread_class == 0x0#define kShrinkItThreadKindIsCreateDirectory	0x0	// when thread_class == 0x1 (control)#define kShrinkItThreadKindIsDataFork			0x0	// when thread_class == 0x2 (data)#define kShrinkItThreadKindIsDisk				0x1	// when thread_class == 0x2#define kShrinkItThreadKindIsResourceFork		0x2	// when thread_class == 0x2#define kShrinkItThreadKindIsFilename			0x0	// when thread_class == 0x3 (filename)#define NELEM(x) ((int) (sizeof(x) / sizeof(x[0])))#define kUnknownTypeStr	"???"

extern const char *gFileTypeNames[256];
/* Simulate a 2-tuple */#define MakeThreadClassAndKind(class, kind) ((uint32_t)(class) << 16 | (uint32_t)(kind))#endif